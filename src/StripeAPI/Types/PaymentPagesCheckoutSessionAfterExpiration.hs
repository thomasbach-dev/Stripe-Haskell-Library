{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentPagesCheckoutSessionAfterExpiration
module StripeAPI.Types.PaymentPagesCheckoutSessionAfterExpiration where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import {-# SOURCE #-} StripeAPI.Types.PaymentPagesCheckoutSessionAfterExpirationRecovery
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_pages_checkout_session_after_expiration@ in the specification.
data PaymentPagesCheckoutSessionAfterExpiration = PaymentPagesCheckoutSessionAfterExpiration
  { -- | recovery: When set, configuration used to recover the Checkout Session on expiry.
    paymentPagesCheckoutSessionAfterExpirationRecovery :: (GHC.Maybe.Maybe PaymentPagesCheckoutSessionAfterExpirationRecovery')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentPagesCheckoutSessionAfterExpiration where
  toJSON obj = Data.Aeson.Types.Internal.object ("recovery" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecovery obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("recovery" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecovery obj)

instance Data.Aeson.Types.FromJSON.FromJSON PaymentPagesCheckoutSessionAfterExpiration where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentPagesCheckoutSessionAfterExpiration" (\obj -> GHC.Base.pure PaymentPagesCheckoutSessionAfterExpiration GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "recovery"))

-- | Create a new 'PaymentPagesCheckoutSessionAfterExpiration' with all required fields.
mkPaymentPagesCheckoutSessionAfterExpiration :: PaymentPagesCheckoutSessionAfterExpiration
mkPaymentPagesCheckoutSessionAfterExpiration = PaymentPagesCheckoutSessionAfterExpiration {paymentPagesCheckoutSessionAfterExpirationRecovery = GHC.Maybe.Nothing}

-- | Defines the object schema located at @components.schemas.payment_pages_checkout_session_after_expiration.properties.recovery.anyOf@ in the specification.
--
-- When set, configuration used to recover the Checkout Session on expiry.
data PaymentPagesCheckoutSessionAfterExpirationRecovery' = PaymentPagesCheckoutSessionAfterExpirationRecovery'
  { -- | allow_promotion_codes: Enables user redeemable promotion codes on the recovered Checkout Sessions. Defaults to \`false\`
    paymentPagesCheckoutSessionAfterExpirationRecovery'AllowPromotionCodes :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | enabled: If \`true\`, a recovery url will be generated to recover this Checkout Session if it
    -- expires before a transaction is completed. It will be attached to the
    -- Checkout Session object upon expiration.
    paymentPagesCheckoutSessionAfterExpirationRecovery'Enabled :: (GHC.Maybe.Maybe GHC.Types.Bool),
    -- | expires_at: The timestamp at which the recovery URL will expire.
    paymentPagesCheckoutSessionAfterExpirationRecovery'ExpiresAt :: (GHC.Maybe.Maybe GHC.Types.Int),
    -- | url: URL that creates a new Checkout Session when clicked that is a copy of this expired Checkout Session
    --
    -- Constraints:
    --
    -- * Maximum length of 5000
    paymentPagesCheckoutSessionAfterExpirationRecovery'Url :: (GHC.Maybe.Maybe Data.Text.Internal.Text)
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentPagesCheckoutSessionAfterExpirationRecovery' where
  toJSON obj = Data.Aeson.Types.Internal.object ("allow_promotion_codes" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecovery'AllowPromotionCodes obj : "enabled" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecovery'Enabled obj : "expires_at" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecovery'ExpiresAt obj : "url" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecovery'Url obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs (("allow_promotion_codes" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecovery'AllowPromotionCodes obj) GHC.Base.<> (("enabled" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecovery'Enabled obj) GHC.Base.<> (("expires_at" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecovery'ExpiresAt obj) GHC.Base.<> ("url" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionAfterExpirationRecovery'Url obj))))

instance Data.Aeson.Types.FromJSON.FromJSON PaymentPagesCheckoutSessionAfterExpirationRecovery' where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentPagesCheckoutSessionAfterExpirationRecovery'" (\obj -> (((GHC.Base.pure PaymentPagesCheckoutSessionAfterExpirationRecovery' GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "allow_promotion_codes")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "enabled")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "expires_at")) GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "url"))

-- | Create a new 'PaymentPagesCheckoutSessionAfterExpirationRecovery'' with all required fields.
mkPaymentPagesCheckoutSessionAfterExpirationRecovery' :: PaymentPagesCheckoutSessionAfterExpirationRecovery'
mkPaymentPagesCheckoutSessionAfterExpirationRecovery' =
  PaymentPagesCheckoutSessionAfterExpirationRecovery'
    { paymentPagesCheckoutSessionAfterExpirationRecovery'AllowPromotionCodes = GHC.Maybe.Nothing,
      paymentPagesCheckoutSessionAfterExpirationRecovery'Enabled = GHC.Maybe.Nothing,
      paymentPagesCheckoutSessionAfterExpirationRecovery'ExpiresAt = GHC.Maybe.Nothing,
      paymentPagesCheckoutSessionAfterExpirationRecovery'Url = GHC.Maybe.Nothing
    }
