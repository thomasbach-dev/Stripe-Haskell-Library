{-# LANGUAGE MultiWayIf #-}
-- CHANGE WITH CAUTION: This is a generated code file generated by https://github.com/Haskell-OpenAPI-Code-Generator/Haskell-OpenAPI-Client-Code-Generator.
{-# LANGUAGE OverloadedStrings #-}

-- | Contains the types generated from the schema PaymentPagesCheckoutSessionConsentCollection
module StripeAPI.Types.PaymentPagesCheckoutSessionConsentCollection where

import qualified Control.Monad.Fail
import qualified Data.Aeson
import qualified Data.Aeson as Data.Aeson.Encoding.Internal
import qualified Data.Aeson as Data.Aeson.Types
import qualified Data.Aeson as Data.Aeson.Types.FromJSON
import qualified Data.Aeson as Data.Aeson.Types.Internal
import qualified Data.Aeson as Data.Aeson.Types.ToJSON
import qualified Data.ByteString.Char8
import qualified Data.ByteString.Char8 as Data.ByteString.Internal
import qualified Data.Functor
import qualified Data.Scientific
import qualified Data.Text
import qualified Data.Text.Internal
import qualified Data.Time.Calendar as Data.Time.Calendar.Days
import qualified Data.Time.LocalTime as Data.Time.LocalTime.Internal.ZonedTime
import qualified GHC.Base
import qualified GHC.Classes
import qualified GHC.Int
import qualified GHC.Show
import qualified GHC.Types
import qualified StripeAPI.Common
import StripeAPI.TypeAlias
import qualified Prelude as GHC.Integer.Type
import qualified Prelude as GHC.Maybe

-- | Defines the object schema located at @components.schemas.payment_pages_checkout_session_consent_collection@ in the specification.
data PaymentPagesCheckoutSessionConsentCollection = PaymentPagesCheckoutSessionConsentCollection
  { -- | promotions: If set to \`auto\`, enables the collection of customer consent for promotional communications. The Checkout
    -- Session will determine whether to display an option to opt into promotional communication
    -- from the merchant depending on the customer\'s locale. Only available to US merchants.
    paymentPagesCheckoutSessionConsentCollectionPromotions :: (GHC.Maybe.Maybe PaymentPagesCheckoutSessionConsentCollectionPromotions')
  }
  deriving
    ( GHC.Show.Show,
      GHC.Classes.Eq
    )

instance Data.Aeson.Types.ToJSON.ToJSON PaymentPagesCheckoutSessionConsentCollection where
  toJSON obj = Data.Aeson.Types.Internal.object ("promotions" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionConsentCollectionPromotions obj : GHC.Base.mempty)
  toEncoding obj = Data.Aeson.Encoding.Internal.pairs ("promotions" Data.Aeson.Types.ToJSON..= paymentPagesCheckoutSessionConsentCollectionPromotions obj)

instance Data.Aeson.Types.FromJSON.FromJSON PaymentPagesCheckoutSessionConsentCollection where
  parseJSON = Data.Aeson.Types.FromJSON.withObject "PaymentPagesCheckoutSessionConsentCollection" (\obj -> GHC.Base.pure PaymentPagesCheckoutSessionConsentCollection GHC.Base.<*> (obj Data.Aeson.Types.FromJSON..:? "promotions"))

-- | Create a new 'PaymentPagesCheckoutSessionConsentCollection' with all required fields.
mkPaymentPagesCheckoutSessionConsentCollection :: PaymentPagesCheckoutSessionConsentCollection
mkPaymentPagesCheckoutSessionConsentCollection = PaymentPagesCheckoutSessionConsentCollection {paymentPagesCheckoutSessionConsentCollectionPromotions = GHC.Maybe.Nothing}

-- | Defines the enum schema located at @components.schemas.payment_pages_checkout_session_consent_collection.properties.promotions@ in the specification.
--
-- If set to \`auto\`, enables the collection of customer consent for promotional communications. The Checkout
-- Session will determine whether to display an option to opt into promotional communication
-- from the merchant depending on the customer\'s locale. Only available to US merchants.
data PaymentPagesCheckoutSessionConsentCollectionPromotions'
  = -- | This case is used if the value encountered during decoding does not match any of the provided cases in the specification.
    PaymentPagesCheckoutSessionConsentCollectionPromotions'Other Data.Aeson.Types.Internal.Value
  | -- | This constructor can be used to send values to the server which are not present in the specification yet.
    PaymentPagesCheckoutSessionConsentCollectionPromotions'Typed Data.Text.Internal.Text
  | -- | Represents the JSON value @"auto"@
    PaymentPagesCheckoutSessionConsentCollectionPromotions'EnumAuto
  deriving (GHC.Show.Show, GHC.Classes.Eq)

instance Data.Aeson.Types.ToJSON.ToJSON PaymentPagesCheckoutSessionConsentCollectionPromotions' where
  toJSON (PaymentPagesCheckoutSessionConsentCollectionPromotions'Other val) = val
  toJSON (PaymentPagesCheckoutSessionConsentCollectionPromotions'Typed val) = Data.Aeson.Types.ToJSON.toJSON val
  toJSON (PaymentPagesCheckoutSessionConsentCollectionPromotions'EnumAuto) = "auto"

instance Data.Aeson.Types.FromJSON.FromJSON PaymentPagesCheckoutSessionConsentCollectionPromotions' where
  parseJSON val =
    GHC.Base.pure
      ( if
            | val GHC.Classes.== "auto" -> PaymentPagesCheckoutSessionConsentCollectionPromotions'EnumAuto
            | GHC.Base.otherwise -> PaymentPagesCheckoutSessionConsentCollectionPromotions'Other val
      )
